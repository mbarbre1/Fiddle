package com.barbre.fiddle.io;

import com.barbre.fiddle.elements.IControl;
import com.barbre.fiddle.elements.IWindowDrawTemplate;

/**
 * Generated by BeanBuilder for SIDL Fiddle
 */
public class EQControl extends EQScreenPiece implements IControl {
	private boolean Style_VScroll;
	private boolean Style_HScroll;
	private boolean Style_Transparent;
	private boolean Style_Border;
	private String TooltipReference;
	private String DrawTemplate;
	private IWindowDrawTemplate DrawTemplateObject;

	public boolean getStyle_VScroll() {
		return Style_VScroll;
	}

	public void setStyle_VScroll(boolean value) {
		boolean old = Style_VScroll;
		Style_VScroll = value;
		firePropertyChange("Style_VScroll", old, Style_VScroll);
	}

	public boolean getStyle_HScroll() {
		return Style_HScroll;
	}

	public void setStyle_HScroll(boolean value) {
		boolean old = Style_HScroll;
		Style_HScroll = value;
		firePropertyChange("Style_HScroll", old, Style_HScroll);
	}

	public boolean getStyle_Transparent() {
		return Style_Transparent;
	}

	public void setStyle_Transparent(boolean value) {
		boolean old = Style_Transparent;
		Style_Transparent = value;
		firePropertyChange("Style_Transparent", old, Style_Transparent);
	}

	public boolean getStyle_Border() {
		return Style_Border;
	}

	public void setStyle_Border(boolean value) {
		boolean old = Style_Border;
		Style_Border = value;
		firePropertyChange("Style_Border", old, Style_Border);
	}

	public String getTooltipReference() {
		return TooltipReference;
	}

	public void setTooltipReference(String value) {
		String old = TooltipReference;
		TooltipReference = value;
		firePropertyChange("TooltipReference", old, TooltipReference);
	}

	public String getDrawTemplate() {
		return DrawTemplate;
	}

	public void setDrawTemplate(String value) {
		String old = DrawTemplate;
		DrawTemplate = value;
		firePropertyChange("DrawTemplate", old, DrawTemplate);
	}

	public IWindowDrawTemplate getDrawTemplateObject() {
		return DrawTemplateObject;
	}

	public void setDrawTemplateObject(IWindowDrawTemplate value) {
		IWindowDrawTemplate old = DrawTemplateObject;
		DrawTemplateObject = value;
		firePropertyChange("DrawTemplateObject", old, DrawTemplateObject);
	}

}