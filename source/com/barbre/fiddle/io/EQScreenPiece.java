package com.barbre.fiddle.io;

import com.barbre.fiddle.elements.IScreenPiece;
import com.barbre.fiddle.elements.IPoint;
import com.barbre.fiddle.elements.ISize;
import com.barbre.fiddle.elements.IRGB;
import com.barbre44.util.Debug;

/**
 * Generated by BeanBuilder for SIDL Fiddle
 */
public class EQScreenPiece extends EQClass implements IScreenPiece {
	private String ScreenID;
	private int Font = 3;
	private boolean RelativePosition = true;
	private IPoint Location;
	private ISize Size;
	private boolean AutoStretch;
	private boolean TopAnchorToTop = true;
	private boolean LeftAnchorToLeft = true;
	private boolean BottomAnchorToTop = true;
	private boolean RightAnchorToLeft = true;
	private int TopAnchorOffset;
	private int BottomAnchorOffset;
	private int LeftAnchorOffset;
	private int RightAnchorOffset;
	private String Text;
	private IRGB TextColor;

	public String getScreenID() {
		return ScreenID;
	}

	public void setScreenID(String value) {
		String old = ScreenID;
		ScreenID = value;
		firePropertyChange("ScreenID", old, ScreenID);
	}

	public int getFont() {
		return Font;
	}

	public void setFont(int value) {
		int old = Font;
		Font = value;
		firePropertyChange("Font", old, Font);
	}

	public boolean getRelativePosition() {
		return RelativePosition;
	}

	public void setRelativePosition(boolean value) {
		boolean old = RelativePosition;
		RelativePosition = value;
		firePropertyChange("RelativePosition", old, RelativePosition);
	}

	public IPoint getLocation() {
		return Location;
	}

	public void setLocation(IPoint value) {
		IPoint old = Location;
		Location = value;
		firePropertyChange("Location", old, Location);
	}

	public ISize getSize() {
		return Size;
	}

	public void setSize(ISize value) {
		ISize old = Size;
		Size = value;
		firePropertyChange("Size", old, Size);
	}

	public boolean getAutoStretch() {
		return AutoStretch;
	}

	public void setAutoStretch(boolean value) {
		boolean old = AutoStretch;
		AutoStretch = value;
		firePropertyChange("AutoStretch", old, AutoStretch);
	}

	public boolean getTopAnchorToTop() {
		return TopAnchorToTop;
	}

	public void setTopAnchorToTop(boolean value) {
		boolean old = TopAnchorToTop;
		TopAnchorToTop = value;
		firePropertyChange("TopAnchorToTop", old, TopAnchorToTop);
	}

	public boolean getLeftAnchorToLeft() {
		return LeftAnchorToLeft;
	}

	public void setLeftAnchorToLeft(boolean value) {
		boolean old = LeftAnchorToLeft;
		LeftAnchorToLeft = value;
		firePropertyChange("LeftAnchorToLeft", old, LeftAnchorToLeft);
	}

	public boolean getBottomAnchorToTop() {
		return BottomAnchorToTop;
	}

	public void setBottomAnchorToTop(boolean value) {
		boolean old = BottomAnchorToTop;
		BottomAnchorToTop = value;
		firePropertyChange("BottomAnchorToTop", old, BottomAnchorToTop);
	}

	public boolean getRightAnchorToLeft() {
		return RightAnchorToLeft;
	}

	public void setRightAnchorToLeft(boolean value) {
		boolean old = RightAnchorToLeft;
		RightAnchorToLeft = value;
		firePropertyChange("RightAnchorToLeft", old, RightAnchorToLeft);
	}

	public int getTopAnchorOffset() {
		return TopAnchorOffset;
	}

	public void setTopAnchorOffset(int value) {
		int old = TopAnchorOffset;
		TopAnchorOffset = value;
		firePropertyChange("TopAnchorOffset", old, TopAnchorOffset);
	}

	public int getBottomAnchorOffset() {
		return BottomAnchorOffset;
	}

	public void setBottomAnchorOffset(int value) {
		int old = BottomAnchorOffset;
		BottomAnchorOffset = value;
		firePropertyChange("BottomAnchorOffset", old, BottomAnchorOffset);
	}

	public int getLeftAnchorOffset() {
		return LeftAnchorOffset;
	}

	public void setLeftAnchorOffset(int value) {
		int old = LeftAnchorOffset;
		LeftAnchorOffset = value;
		firePropertyChange("LeftAnchorOffset", old, LeftAnchorOffset);
	}

	public int getRightAnchorOffset() {
		return RightAnchorOffset;
	}

	public void setRightAnchorOffset(int value) {
		int old = RightAnchorOffset;
		RightAnchorOffset = value;
		firePropertyChange("RightAnchorOffset", old, RightAnchorOffset);
	}

	public String getText() {
		return Text;
	}

	public void setText(String value) {
		String old = Text;
		Text = value;
		firePropertyChange("Text", old, Text);
	}

	public IRGB getTextColor() {
		return TextColor;
	}

	public void setTextColor(IRGB value) {
if (value == null)		
	Debug.println(this, "TextColor value being set to null");
		IRGB old = TextColor;
		TextColor = value;
		firePropertyChange("TextColor", old, TextColor);
	}

}